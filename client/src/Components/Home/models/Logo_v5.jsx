/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\\Logo_v5.glb
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useTexture, useBounds, Bounds, useVideoTexture } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { Suspense } from 'react'
import * as THREE from 'three'

export default function LogoV5(props) {
  const { nodes, materials } = useGLTF('/models/v5/Logo_v5.glb')
  const bakedTexture = useTexture('models/v5/texture.jpg')
  const skyTexture = useTexture('models/v5/sky.png')
  // const shipTexture = useTexture('models/v5/spaceship.png')
  const navGroup = useRef()
  const [active, setActive] = useState(false)
  

  useFrame(({ clock }) => {
    const a = clock.getElapsedTime();
    navGroup.current.rotation.y = a * 0.5;
    // navGroup.current.rotation.x = a;
    // navGroup.current.rotation.z = a;
  });
  return (
    <group {...props} dispose={null}>
      <group position={[0.05, 0.2, -4.21]} ref={navGroup}>
        <mesh geometry={nodes.Nav_6001.geometry} material={nodes.Nav_6001.material} rotation={[Math.PI / 2, 0, 0]} scale={[1,1,active ? 1.4 : 1]} onPointerEnter={() => setActive(!active) } onPointerLeave={() => setActive(!active)}>
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
        <mesh geometry={nodes.Nav_6002.geometry} material={nodes.Nav_6002.material} rotation={[Math.PI / 2, 0, 0]} >
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
        <mesh geometry={nodes.Nav_6003.geometry} material={nodes.Nav_6003.material} rotation={[Math.PI / 2, 0, 0]} >
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
        <mesh geometry={nodes.Nav_6004.geometry} material={nodes.Nav_6004.material} rotation={[Math.PI / 2, 0, 0]} >
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
        <mesh geometry={nodes.Nav_6005.geometry} material={nodes.Nav_6005.material} rotation={[Math.PI / 2, 0, 0]} >
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
        <mesh geometry={nodes.Nav_6006.geometry} material={nodes.Nav_6006.material} rotation={[Math.PI / 2, 0, 0]} >
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      </group>
      <mesh geometry={nodes['1'].geometry} material={nodes['1'].material} position={[0.05, 1.5, -37.88]} rotation={[Math.PI / 2, 0, 0]} scale={1.8}> 
        <meshBasicMaterial map={skyTexture} map-flipY = {false} />
      </mesh>
      
      <mesh geometry={nodes.Base.geometry} material={nodes.Base.material} position={[0.05, 0.13, -4.27]} rotation={[Math.PI / 2, 0, 0]} >
        <meshBasicMaterial map={bakedTexture} map-flipY = {false} />
      </mesh>
      <mesh geometry={nodes.Terrain.geometry} material={nodes.Terrain.material} position={[0.05, 0.1, -4.61]} rotation={[Math.PI / 2, 0, 0]} >
        <meshBasicMaterial map={bakedTexture} map-flipY = {false} />
      </mesh>
      <mesh geometry={nodes.Gem001.geometry} material={nodes.Gem001.material} position={[0.05, 0.1, -4.61]} rotation={[Math.PI / 2, 0, 0]} >
        <meshBasicMaterial map={bakedTexture} map-flipY = {false} />
      </mesh>
      
      {/* <mesh geometry={nodes.Gem.geometry} material={nodes.Gem.material} position={[0.05, 0.1, -5.31]} rotation={[Math.PI / 2, 0, 0]} >
        <meshBasicMaterial map={bakedTexture} map-flipY = {false} />
      </mesh> */}
      {/* <mesh geometry={nodes.plate.geometry} material={nodes.plate.material} position={[-2.96, 1.39, 6.24]} rotation={[Math.PI / 2, 0, 0]} >
        
        <Suspense fallback={<meshBasicMaterial map={bakedTexture} map-flipY = {false} />}>
          <VideoMaterial url="models/v5/rickroll.mp4" />
        </Suspense>
      </mesh> */}

      <Bounds>
        <SelectToZoom>
          <mesh geometry={nodes.Logo.geometry} material={nodes.Logo.material} position={[-0.3, 3.16, -3.01]} rotation={[Math.PI / 2, 0, 0]} >
            <meshBasicMaterial map={bakedTexture} map-flipY = {false} />
          </mesh>
          <mesh geometry={nodes.Satellite.geometry} material={nodes.Satellite.material} position={[0.05, 0.1, -4.61]} rotation={[Math.PI / 2, 0, 0]} >
            <meshBasicMaterial map={bakedTexture} map-flipY = {false} />
          </mesh>
        </SelectToZoom>
      </Bounds>
    </group>
  )
}

useGLTF.preload('/models/v5/Logo_v5.glb')

function SelectToZoom({ children }) {
  const api = useBounds()
  return (
    <group onClick={(e) => (e.stopPropagation(), e.delta <= 2 && api.refresh(e.object).fit())} onPointerMissed={(e) => e.button === 0 && api.refresh().fit()}>
      {children}
    </group>
  )
}


function VideoMaterial({ url }) {
  const texture = useVideoTexture(url)
  return <meshStandardMaterial map={texture} toneMapped={false} side={THREE.DoubleSide}/>
}

function FallbackMaterial({ url }) {
  const texture = useTexture(url)
  return <meshBasicMaterial map={texture} toneMapped={false} />
}
