/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 logo.glb
*/

import React, { Suspense, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useEffect } from 'react'
import { useState } from 'react'

export default function Logo(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/credenz/logo.glb')
  const { actions } = useAnimations(animations, group)
  const [playAstroAnimations, setAstroAnimations] = useState(false)
  console.log(actions)
  console.log(typeof actions)
  useEffect(() => {
    actions["Armature Astronaut|Armature Astronaut|Armature AstronautAction"].reset().play()
  },[playAstroAnimations])
  return (
    <group ref={group} {...props} dispose={null}>
      <group receiveShadow castShadow name="Scene">
        <Suspense onClick={() => console.log("clicked astro")}>
          <group name="Armature_Astronaut" position={[3.6, -2.67, 1.45]} rotation={[0, -0.51, 0]} scale={0.69} onClick={() => console.log("clicked astro")}>
            <primitive castShadow object={nodes.root} />
            <group name="Astronaut" >
              <skinnedMesh onPointerOver={() => console.log("clicked astro")} castShadow name="Cylinder001" geometry={nodes.Cylinder001.geometry} material={materials.visier} skeleton={nodes.Cylinder001.skeleton} />
              <skinnedMesh onPointerOver={() => console.log("clicked astro")} castShadow name="Cylinder001_1" geometry={nodes.Cylinder001_1.geometry} material={materials.Astronaut} skeleton={nodes.Cylinder001_1.skeleton} />
            </group>
          </group>
        </Suspense> 
        {/* onClick={() => {setAstroAnimations(!playAstroAnimations); console.log(playAstroAnimations)}} */}
        <mesh receiveShadow name="terrain2" geometry={nodes.terrain2.geometry} material={materials.terrain} position={[0, -3.01, -41.84]} scale={55.29} />
        <mesh name="Moon" geometry={nodes.Moon.geometry} material={materials.moon} position={[-1.38, 17.6, -99.03]} rotation={[-Math.PI / 2, 0.08, -Math.PI]} scale={[20.37, 0, 20.37]} />
        <group name="Base" position={[0.12, -2.26, -14.18]} rotation={[-3.13, 0, -Math.PI]} scale={[6.45, 0.22, 6.45]}>
          <mesh name="Cylinder004" geometry={nodes.Cylinder004.geometry} material={materials.Base} />
          <mesh name="Cylinder004_1" geometry={nodes.Cylinder004_1.geometry} material={materials.Blue_ligth} />
        </group>
        <mesh name="Earth" geometry={nodes.Earth.geometry} material={materials.Earth} position={[-95.41, 58.65, -172.87]} scale={7.69} onClick={() => console.log("clicked Earth")}/>
        <mesh name="BezierCurve" geometry={nodes.BezierCurve.geometry} material={materials.wire} position={[-4.39, -2.37, 0]} rotation={[0, 1.4, 0]} scale={2.37} />
        <group castShadow name="Curve001" position={[-0.58, 1.91, -13.78]} rotation={[Math.PI / 2, 0, 0]} scale={50.45}>
          <mesh onClick={() => console.log("clicked logo")} castShadow name="Curve001_1" geometry={nodes.Curve001_1.geometry} material={materials.Base} />
          <mesh onClick={() => {setAstroAnimations(!playAstroAnimations); console.log(playAstroAnimations)}} castShadow name="Curve001_2" geometry={nodes.Curve001_2.geometry} material={materials.SVGMat} />
        </group>
        <mesh name="Crystal_Cube001" geometry={nodes.Crystal_Cube001.geometry} material={materials.MAT_crystal} position={[-9.95, -3.2, -3.41]} rotation={[Math.PI / 2, 0, -0.66]} scale={0.96} />
        <mesh name="Crystal_Cube002" geometry={nodes.Crystal_Cube002.geometry} material={materials.MAT_crystal} position={[10.74, -4.32, -3.37]} rotation={[1.88, 0.07, -2.48]} scale={1.77} />
        <mesh name="Cube001_Cube001" geometry={nodes.Cube001_Cube001.geometry} material={materials.MAT_crystal} position={[-4.73, -3.48, 7.93]} rotation={[1.21, 0.04, 0.61]} scale={2} />
        <mesh name="Cube001_Cube003" geometry={nodes.Cube001_Cube003.geometry} material={materials.MAT_crystal} position={[11.79, -3.86, -9.66]} rotation={[Math.PI / 2, 0, 0.83]} scale={1.69} />
        <mesh name="Cube002_Cube001" geometry={nodes.Cube002_Cube001.geometry} material={materials.MAT_crystal} position={[13.41, -3.86, -11.31]} rotation={[Math.PI / 2, 0, 3.11]} scale={2} />
        <mesh name="Cube002_Cube003" geometry={nodes.Cube002_Cube003.geometry} material={materials.MAT_crystal} position={[-9.67, -1.79, -7.82]} rotation={[Math.PI / 2, 0, -1.04]} scale={1.7} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/credenz/logo.glb')
